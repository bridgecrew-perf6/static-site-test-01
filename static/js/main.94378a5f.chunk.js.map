{"version":3,"sources":["tutorial/12-memo-useMemo-useCallback/setup/index.js","tutorial/9-custom-hooks/final/2-useFetch.js","App.js","index.js"],"names":["BigList","React","memo","products","addToCart","console","info","className","map","product","key","id","SingleProduct","fields","name","price","image","url","src","alt","onClick","Index","useState","loading","setLoading","setProducts","getProducts","useCallback","a","fetch","response","json","useEffect","useFetch","count","setCount","cart","setCart","mostExpensive","useMemo","reduce","accum","item","style","marginTop","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAgDMA,EAAUC,IAAMC,MAAK,YAA8B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAEtC,OADAC,QAAQC,KAAK,qBAAsB,mBAEjC,6BAASC,UAAU,YAChBJ,EAASK,KAAI,SAACC,GACb,OACE,kBAAC,EAAD,eACEC,IAAKD,EAAQE,IACTF,EAFN,CAGEL,UAAWA,YAQjBQ,EAAgB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQT,EAAgB,EAAhBA,UACzBU,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACZA,GAAgB,IAChB,IAAMC,EAAQH,EAAOG,MAAM,GAAGC,IAE9B,OACE,6BAASV,UAAU,WACjB,yBAAKW,IAAKF,EAAOG,IAAKL,IACtB,4BAAKA,GACL,+BAAKC,GACL,4BAAQK,QAAShB,GAAjB,iBAISiB,EA7DD,WAAO,IACXlB,ECjBc,SAACc,GAAS,IAAD,EACDK,oBAAS,GADR,mBACxBC,EADwB,KACfC,EADe,OAECF,mBAAS,IAFV,mBAExBnB,EAFwB,KAEdsB,EAFc,KAIzBC,EAAcC,sBAAW,sBAAC,8BAAAC,EAAA,sEACPC,MAAMZ,GADC,cACxBa,EADwB,gBAEPA,EAASC,OAFF,OAExB5B,EAFwB,OAG9BsB,EAAYtB,GACZqB,GAAW,GAJmB,2CAK7B,CAACP,IAKJ,OAHAe,qBAAU,WACRN,MACC,CAACT,EAAKS,IACF,CAAEH,UAASpB,YDGG8B,CAdX,oDAcF9B,SADU,EAEQmB,mBAAS,GAFjB,mBAEXY,EAFW,KAEJC,EAFI,OAGMb,mBAAS,GAHf,mBAGXc,EAHW,KAGLC,EAHK,KAKZjC,EAAYuB,uBAAY,WAC5BU,GAAQ,SAACD,GAAD,OAAUA,EAAO,OACxB,IAEGE,EAAgBC,mBACpB,kBAA6BpC,EAjBxBqC,QAAO,SAACC,EAAOC,GAElB,OADiBD,EAAQC,EAAK7B,OAAOE,MAAQ2B,EAAK7B,OAAOE,MAAQ0B,IAEhE,GAAK,MAeR,CAACtC,IAGH,OACE,oCACE,uCAAa+B,GACb,4BAAQ3B,UAAU,MAAMa,QAAS,kBAAMe,EAASD,EAAQ,KAAxD,YAIA,wBAAIS,MAAO,CAAEC,UAAW,SAAxB,SAAyCR,GAEzC,iDAAuBE,GAEvB,kBAACtC,EAAD,CAASG,SAAUA,EAAUC,UAAWA,MEhC/ByC,MARf,WACE,OACE,yBAAKtC,UAAU,aACb,kBAAC,EAAD,QCDNuC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.94378a5f.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport { useFetch } from \"../../9-custom-hooks/final/2-useFetch\";\n\n// ATTENTION!!!!!!!!!!\n// I SWITCHED TO PERMANENT DOMAIN\nconst url = \"https://course-api.com/javascript-store-products\";\n\n// every time props or state changes, component re-renders\n\nconst calculateMostExpensive = (data) => {\n  return (\n    data.reduce((accum, item) => {\n      const maxPrice = accum < item.fields.price ? item.fields.price : accum;\n      return maxPrice;\n    }, 0) / 100\n  );\n};\n\nconst Index = () => {\n  const { products } = useFetch(url);\n  const [count, setCount] = useState(0);\n  const [cart, setCart] = useState(0);\n\n  const addToCart = useCallback(() => {\n    setCart((cart) => cart + 1);\n  }, []);\n\n  const mostExpensive = useMemo(\n    () => calculateMostExpensive(products),\n    [products]\n  );\n\n  return (\n    <>\n      <h1>Count : {count}</h1>\n      <button className=\"btn\" onClick={() => setCount(count + 1)}>\n        click me\n      </button>\n\n      <h1 style={{ marginTop: \"3rem\" }}>cart: {cart}</h1>\n\n      <h1>Most Expensive = ${mostExpensive}</h1>\n\n      <BigList products={products} addToCart={addToCart} />\n    </>\n  );\n};\n\nconst BigList = React.memo(({ products, addToCart }) => {\n  console.info(\"%cBigList rendered\", \"background: red\");\n  return (\n    <section className=\"products\">\n      {products.map((product) => {\n        return (\n          <SingleProduct\n            key={product.id}\n            {...product}\n            addToCart={addToCart}\n          ></SingleProduct>\n        );\n      })}\n    </section>\n  );\n});\n\nconst SingleProduct = ({ fields, addToCart }) => {\n  let { name, price } = fields;\n  price = price / 100;\n  const image = fields.image[0].url;\n\n  return (\n    <article className=\"product\">\n      <img src={image} alt={name} />\n      <h4>{name}</h4>\n      <p>${price}</p>\n      <button onClick={addToCart}>add to cart</button>\n    </article>\n  );\n};\nexport default Index;\n","import { useState, useEffect, useCallback } from 'react';\n\nexport const useFetch = (url) => {\n  const [loading, setLoading] = useState(true);\n  const [products, setProducts] = useState([]);\n\n  const getProducts = useCallback(async () => {\n    const response = await fetch(url);\n    const products = await response.json();\n    setProducts(products);\n    setLoading(false);\n  }, [url]);\n\n  useEffect(() => {\n    getProducts();\n  }, [url, getProducts]);\n  return { loading, products };\n};\n","import React from \"react\";\nimport Setup from \"./tutorial/12-memo-useMemo-useCallback/setup\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Setup />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}